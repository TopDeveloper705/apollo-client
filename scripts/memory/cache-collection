#!/usr/bin/env node --expose-gc

const assert = require("assert");
const {
  ApolloClient,
  InMemoryCache,
  gql,
  makeVar,
} = require("@apollo/client");

(function keepAlive() {
  gc(); // enabled by --expose-gc
  setTimeout(keepAlive, 100);
})();

const timeLimitInSecs = 10;
setTimeout(() => {
  console.error(`gc took longer than ${timeLimitInSecs} seconds`);
  console.error("FAIL");
  process.exit(-1);
}, timeLimitInSecs * 1000);

const start = Date.now();
const registry = new FinalizationRegistry(key => {
  console.log(`${key} collected in ${Date.now() - start}ms`);
  console.error("OK");
  process.exit(0);
});

const localVar = makeVar(123);

(function (client) {
  registry.register(client.cache, "client.cache");

  client.watchQuery({
    query: gql`query { local }`,
  }).subscribe({
    next(result) {
      assert.deepStrictEqual(result.data, {
        local: 123,
      });
      client.stop();
    },
  });
})(new ApolloClient({
  cache: new InMemoryCache({
    typePolicies: {
      Query: {
        fields: {
          local() {
            return localVar();
          },
        },
      },
    },
  }),
}));
